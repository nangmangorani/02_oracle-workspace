-- 1.
SELECT *
FROM EMP;

-- 2.
SELECT EMPNO, ENAME, SAL
FROM EMP;

-- 3. 
SELECT ENAME || SAL
FROM EMP;

-- 4.
SELECT ENAME ||'의 월급은 '||SAL|| '입니다.'
FROM EMP;

-- 5.
SELECT ENAME ||'의 직업은 '||JOB|| '입니다.'
FROM EMP;

-- 6-1.
SELECT DISTINCT JOB
FROM EMP;

-- 6-2.
SELECT JOB
FROM EMP
GROUP BY JOB;

-- 7-1.
SELECT ENAME, SAL
FROM EMP
ORDER BY SAL;

-- 7-2.
SELECT ENAME, SAL AS "월급"
FROM EMP
ORDER BY 월급;

-- 7-3. 뭔소리지..? 이거맞나요 쌤?
SELECT ROWNUM, ENAME, SAL AS "월급"
FROM EMP;

-- 8.
SELECT ENAME, SAL, JOB
FROM EMP
WHERE SAL = 3000;

-- 9.
SELECT ENAME, SAL, JOB
FROM EMP
WHERE SAL >= 3000;

-- 10.
SELECT ENAME, SAL, JOB, HIREDATE, DEPTNO
FROM EMP
WHERE ENAME = 'SCOTT';

-- 11.
SELECT ENAME, SAL * 12
FROM EMP
WHERE SAL * 12 >= 3600;

-- 12.
SELECT ENAME, SAL, COMM, SAL + COMM
FROM EMP
WHERE DEPTNO = 10;

-- 13-1.
SELECT ENAME, SAL
FROM EMP
WHERE SAL BETWEEN 1000 AND 3000;

-- 13-2.
SELECT ENAME, SAL
FROM EMP
WHERE SAL >= 1000 AND SAL <= 3000;

-- 14.
SELECT ENAME, SAL
FROM EMP
WHERE ENAME LIKE 'S%';

-- 15.
SELECT ENAME
FROM EMP
WHERE ENAME LIKE '_M%';

-- 16.
SELECT ENAME
FROM EMP
WHERE ENAME LIKE '%T';

-- 17.
SELECT ENAME
FROM EMP
WHERE ENAME LIKE '%A%';

-- 18.
SELECT ENAME, COMM
FROM EMP
WHERE COMM IS NULL;

-- 19-1.
SELECT ENAME, SAL, JOB
FROM EMP
WHERE JOB IN('SALESMAN', 'ANALYST', 'MANAGER');

-- 19-2.
SELECT ENAME, SAL, JOB
FROM EMP
WHERE JOB = 'SALESMAN' OR JOB = 'ANALYST' OR JOB = 'MANAGER';

-- 20.
SELECT ENAME, SAL, JOB
FROM EMP
WHERE JOB = 'SALESMAN' AND SAL>= 1200;

-- 21. LOWER, UPPER, INITCAP
SELECT LOWER(ENAME)
FROM EMP;

SELECT UPPER(ENAME)
FROM EMP;

SELECT INITCAP(ENAME)
FROM EMP;

-- 22.
SELECT ENAME, SAL
FROM EMP
WHERE ENAME = UPPER('scott');

-- 23.
SELECT SUBSTR('SMITH',1,3)
FROM DUAL;

-- 24.
SELECT ENAME, LENGTH(ENAME)
FROM EMP;

-- 25.
SELECT LENGTH('가나다라마')
FROM DUAL;

-- 26.
SELECT LENGTHB('가나다라마')
FROM DUAL;

-- 27.
SELECT INSTR(ENAME,'M')
FROM EMP
WHERE ENAME = 'SMITH';

-- 28.
SELECT SUBSTR('abcdefg@naver.com', INSTR('abcdefg@naver.com', '@')+1)
FROM DUAL;

-- 29.
SELECT ENAME, REPLACE(SAL,0,'*')
FROM EMP;

-- 30.
/*
CREATE TABLE 테이블명(
        컬럼명 자료형(크기),
        컬럼명 자료형(크기),
        컬럼명 자료형,
        */
CREATE TABLE TEST_ENAME(
ENAME VARCHAR2(10));

SELECT * FROM TEST_ENAME;

-- 31.
INSERT INTO TEST_ENAME VALUES('김시연');
INSERT INTO TEST_ENAME VALUES('차은우');
INSERT INTO TEST_ENAME VALUES('주지훈');

/*
INSERT INTO 테이블명 VALUES (값1, 값2, 값3...);
*/

-- 32.
COMMIT;

-- 33.
SELECT SUBSTR(ENAME,1,1)||'*'||SUBSTR(ENAME,3)
FROM TEST_ENAME;

-- 34. LPAD / RPAD(STRING, 최종적으로 반환할 문자의 길이, [덧붙이고자 하는 문자])
SELECT ENAME, RPAD(SAL,10,'*')
FROM EMP;

-- 35. 
SELECT 'smith'
FROM DUAL;

SELECT LTRIM('smith','s')
FROM DUAL;

SELECT RTRIM('smith','h')
FROM DUAL;

SELECT TRIM(BOTH  's' FROM 'smiths')
FROM DUAL;

SELECT TRIM(LEADING 's' FROM 'smiths')
FROM DUAL;

SELECT TRIM(TRAILING  's' FROM 'smiths')
FROM DUAL;

-- 36.
SELECT ENAME
FROM EMP;

-- 37.
SELECT ROUND(876.567,2)
FROM DUAL;

-- 38.
SELECT TRUNC(876.567,2)
FROM DUAL;

-- 39.
SELECT MOD(10,3)
FROM DUAL;

-- 40.
SELECT ENAME, FLOOR(MONTHS_BETWEEN(SYSDATE,HIREDATE))
FROM EMP;

-- 50.
SELECT ADD_MONTHS('20230630',100)
FROM DUAL;

-- 51. NEXT_DAY(DATE, 요일)
SELECT NEXT_DAY('20230101', '월')
FROM DUAL;

-- 52.
SELECT NEXT_DAY(SYSDATE, '화')
FROM DUAL;

-- 53.
SELECT NEXT_DAY(ADD_MONTHS(SYSDATE,100), '월') 
FROM DUAL;

-- 54. LAST_DAY(DATE)
SELECT LAST_DAY('19900522')
FROM DUAL;

-- 55.
SELECT LAST_DAY(SYSDATE) - SYSDATE
FROM DUAL;

-- 56.
SELECT ENAME, HIREDATE, LAST_DAY(HIREDATE)
FROM EMP
WHERE ENAME = 'KING';

-- 57. SELECT TO_CHAR(SYSDATE, 'DAY'),
SELECT ENAME, TO_CHAR(HIREDATE, 'DAY'), TO_CHAR(SAL, '9,999')
FROM EMP
WHERE ENAME = 'SCOTT';

-- 58.
SELECT ENAME, HIREDATE
FROM EMP
WHERE TO_CHAR(HIREDATE,'YYYY') = 1981;

-- 59.
SELECT ENAME, EXTRACT(YEAR FROM HIREDATE), EXTRACT(MONTH FROM HIREDATE), EXTRACT(DAY FROM HIREDATE)
FROM EMP;

--60.
SELECT ENAME, TO_CHAR(SAL*200, '9,999,999')
FROM EMP;

-- 61. SELECT TO_CHAR(1234, 'L99,999')
SELECT ENAME, TO_CHAR(SAL*200, 'L9,999,999')
FROM EMP;

-- 62.
SELECT ENAME, NVL(COMM,0)
FROM EMP;

-- 63. DECODE(SUBSTR(EMP_NO,8,1),'1', '남', '2', '여') AS "성별"
SELECT DECODE(MOD(EMPNO,2),'1','홀수','0','짝수')
FROM EMP;

-- 64.
SELECT ENAME, JOB, DECODE(JOB, 'SALESMAN', '5000', 2000) AS "COMM"
FROM EMP;

-- 65.
/*
CASE WHEN THEN
    
    CASE WHEN 조건식1 THEN 결과값1
         WHEN 조건식2 THEN 결과값2
         ...
         ELSE 결과값N
    END
*/

SELECT ENAME, JOB, SAL, (CASE WHEN SAL>= 3000 THEN 500
                              WHEN SAL >= 2000 AND SAL <3000 THEN 300
                              WHEN SAL >= 1000 AND SAL <2000 THEN 200
                              ELSE 0 END) AS "보너스"
FROM EMP;

-- 66.
SELECT MAX(SAL)
FROM EMP
WHERE JOB = 'SALESMAN';

-- 67.
SELECT DNAME, MAX(SAL)
FROM EMP
JOIN DEPT USING(DEPTNO)
GROUP BY DNAME;

-- 68.
SELECT JOB, MIN(SAL)
FROM EMP
GROUP BY JOB
HAVING JOB <> 'SALESMAN'
ORDER BY MIN(SAL) DESC;

-- 69.
SELECT JOB, SUM(SAL)
FROM EMP
GROUP BY JOB
HAVING JOB <> 'SALESMAN' AND SUM(SAL) >= 4000;

-- 70.
SELECT ENAME, JOB, SAL, RANK() OVER(ORDER BY SAL DESC)
FROM EMP
WHERE JOB IN ('ANALYST','MANAGER');

-- 71.
SELECT ENAME, JOB, SAL, DENSE_RANK() OVER(ORDER BY SAL DESC)
FROM EMP
WHERE JOB IN ('ANALYST','MANAGER');

-- 72.
SELECT EMPNO, ENAME, JOB, SAL
FROM (SELECT EMPNO, ENAME, JOB, SAL, RANK() OVER(ORDER BY SAL DESC) AS "순위"
FROM EMP)
WHERE 순위 <=5;


-- 73.
-- ORACLE
SELECT ENAME, SAL, GRADE
FROM EMP E, SALGRADE S
WHERE ;

-- ANSI
SELECT ENAME, SAL, GRADE
FROM EMP
LEFT JOIN SALGRADE
;


SELECT *
FROM DEPT;

SELECT *
FROM EMP;

SELECT *
FROM SALGRADE;


-- ANSI


-- 74.
-- ORACLE
SELECT ENAME, LOC, (SELECT LOC
                    FROM DEPT
                    WHERE DEPTNO = 40)
                    
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;

-- ANSI
SELECT ENAME, LOC, (SELECT LOC
                    FROM DEPT
                    WHERE DEPTNO = 40)
FROM EMP
LEFT JOIN DEPT USING(DEPTNO); 

-- 75. 
-- ORACLE
SELECT E.ENAME, E.JOB, M.MGR
FROM EMP E, EMP M
WHERE E.EMPNO = M.MGR;

-- ANSI

-- 76. -- 보스턴 뭔소리지
SELECT ENAME, JOB, SAL, LOC
FROM EMP
JOIN DEPT USING(DEPTNO);


SELECT *
FROM DEPT;

SELECT *
FROM EMP;

SELECT *
FROM SALGRADE;

