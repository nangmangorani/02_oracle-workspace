-- Basic SELECT
-- 1.

SELECT DEPARTMENT_NAME AS "학과 명", CATEGORY AS "계열"
FROM TB_DEPARTMENT;

-- 2.
SELECT DEPARTMENT_NAME|| '의 정원은' || CAPACITY || ' 명 입니다.' AS "학과별 정원"
FROM TB_DEPARTMENT;

-- 3. ㄱㄷㄱㄷ
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y' AND DEPARTMENT_NO = '001'
AND SUBSTR(STUDENT_SSN,8,1) IN ('2','4');

-- 4.
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO IN ('A513079', 'A513090', 'A513091', 'A513110', 'A513119')
ORDER BY STUDENT_NAME DESC;

-- 5.
SELECT DEPARTMENT_NAME, CATEGORY
FROM TB_DEPARTMENT
WHERE CAPACITY >= 20 AND CAPACITY <= 30;

-- 6.
SELECT PROFESSOR_NAME
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;

-- 7.
SELECT *
FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;

-- 8.
SELECT PREATTENDING_CLASS_NO
FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

-- 9.
SELECT CATEGORY
FROM TB_DEPARTMENT
GROUP BY CATEGORY
ORDER BY CATEGORY;

-- 10.
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE INSTR(STUDENT_ADDRESS,'전주') > 0 
AND EXTRACT(YEAR FROM ENTRANCE_DATE)= '2002'
AND ABSENCE_YN = 'N';

-- Additional SELECT - 함수
-- 1.
SELECT STUDENT_NO, STUDENT_NAME, ENTRANCE_DATE
FROM TB_STUDENT
WHERE DEPARTMENT_NO = 2
ORDER BY ENTRANCE_DATE;

-- 2. 잘 작성해서 문제가 없네요 ㅋ
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE LENGTH(PROFESSOR_NAME) != 3;

-- 3.
SELECT PROFESSOR_NAME AS "교수이름",
TO_NUMBER(TO_CHAR(SYSDATE,'RR')) - TO_NUMBER(SUBSTR(PROFESSOR_SSN,1,2))+100 AS "나이"
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN,8,1) = 1
ORDER BY 나이;

-- 4.
SELECT SUBSTR(PROFESSOR_NAME,2) AS "이름"
FROM TB_PROFESSOR;

-- 5.
SELECT STUDENT_NO, STUDENT_NAME, SUBSTR(STUDENT_SSN,1,6)
FROM TB_STUDENT
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE)-
EXTRACT(YEAR FROM TO_DATE(SUBSTR(STUDENT_SSN,1,6))) >= 20;

-- 6.
SELECT TO_CHAR(TO_DATE('20/12/25'), 'DAY')
FROM DUAL;

-- 7.
TO_DATE('99/10/11','YY/MM/DD');
-- 2099년 10월 11일
TO_DATE('49/10/11','YY/MM/DD');
-- 1949년 10월 11일
TO_DATE('99/10/11','RR/MM/DD');
-- 1999년 10월 11일

-- 8.
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_NO,1,1) <> 'A';

-- 9.
SELECT ROUND(AVG(POINT),1) AS "평점"
FROM  TB_GRADE
WHERE STUDENT_NO = 'A517178';

-- 10.
SELECT DEPARTMENT_NO AS "학과번호", COUNT(*) AS "학생수(명)"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

-- 11.
SELECT COUNT(*)
FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;

-- 12.
SELECT SUBSTR(TERM_NO,1,4) AS "년도", ROUND(AVG(POINT),1) AS "년도 별 평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO,1,4);

-- 13. 어쩌란거야
SELECT DEPARTMENT_NO, COUNT(DECODE(ABSENCE_YN,'Y',0))
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;


SELECT *
FROM TB_DEPARTMENT;

SELECT *
FROM TB_CLASS;

SELECT *
FROM TB_CLASS_PROFESSOR;

SELECT *
FROM TB_PROFESSOR;

SELECT *
FROM TB_STUDENT;

SELECT *
FROM TB_GRADE;




-- 14.
SELECT *
FROM (SELECT STUDENT_NAME AS "동일이름", COUNT(*) AS "동명인수"
FROM TB_STUDENT
GROUP BY STUDENT_NAME)
WHERE 동명인수 >= 2;

SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE 1 =1;


-- 15. 도대체 어케하는거야 통계성쿼리ROLLUP 찾아서 
SELECT NVL(SUBSTR(TERM_NO,1,4),' ') AS "연도", NVL(SUBSTR(TERM_NO,5,2),' ') AS "학기", ROUND(AVG(POINT),1)
FROM TB_STUDENT S, TB_GRADE G
WHERE S.STUDENT_NO = G.STUDENT_NO
AND STUDENT_NAME = '김고운'
GROUP BY ROLLUP(SUBSTR(TERM_NO,1,4), SUBSTR(TERM_NO,5,2));

--GROUP BY ROLLUP(SUBSTR(TERM_NO,1,4),SUBSTR(TERM_NO,5,6) ,POINT))';





SELECT *
FROM TB_DEPARTMENT;

SELECT *
FROM TB_CLASS
WHERE CLASS_NAME LIKE '%드로잉%'; --C0888900

SELECT *
FROM TB_CLASS_PROFESSOR
WHERE CLASS_NO = 'C0888900';

SELECT *
FROM TB_PROFESSOR;

SELECT *
FROM TB_STUDENT;

SELECT *
FROM TB_GRADE;





-- 1.
SELECT STUDENT_NAME AS "학생이름", STUDENT_ADDRESS AS "주소지"
FROM TB_STUDENT
ORDER BY STUDENT_NAME;

-- 2.
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT 
WHERE ABSENCE_YN = 'Y'
ORDER BY SUBSTR(STUDENT_SSN,1,6) DESC;

-- 3.
SELECT STUDENT_NAME, STUDENT_NO, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_NO,1,1) <> 'A' AND 
(SUBSTR(STUDENT_ADDRESS,1,3) = '경기도' OR SUBSTR(STUDENT_ADDRESS,1,3) = '강원도')
ORDER BY STUDENT_NAME;

-- 4. TB_DEPARTMENT TB_PROFESSOR, DEPARTMENT_NO
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_DEPARTMENT
JOIN TB_PROFESSOR USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '법학과'
ORDER BY SUBSTR(PROFESSOR_SSN,1,6);

-- 5. TB_GRADE/TERM_NO & POINT , TB_STUDENT/ JOIN STUDENT_NO
SELECT STUDENT_NO, POINT
FROM TB_GRADE
JOIN TB_STUDENT USING(STUDENT_NO)
WHERE SUBSTR(TERM_NO,1,6) = 200402 AND CLASS_NO = 'C3118100'
ORDER BY POINT DESC, STUDENT_NO;

-- 6.
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_DEPARTMENT
JOIN TB_STUDENT USING(DEPARTMENT_NO)
ORDER BY STUDENT_NAME;

-- 7.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_DEPARTMENT
JOIN TB_CLASS USING(DEPARTMENT_NO);

-- 8. TB_PROFESSOR/PROFESSOR_NAME,PROFESSOR_NO || TB_CLASS/CLASS_NAME, CLASS_NO
-- || TB_CLASS_PROFESSOR/ CLASS_NO, PROFESSOR_NO

SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS_PROFESSOR
JOIN TB_CLASS USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO)
ORDER BY PROFESSOR_NAME;

-- 9. 
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS_PROFESSOR
JOIN TB_CLASS USING(CLASS_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
JOIN TB_STUDENT USING(DEPARTMENT_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO)
WHERE CATEGORY = '인문사회'
GROUP BY CLASS_NAME, PROFESSOR_NAME
ORDER BY PROFESSOR_NAME;

-- 10.
SELECT STUDENT_NO AS "학번", STUDENT_NAME AS "학생 이름", ROUND(AVG(POINT),1) AS "전체 평점"
FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NO, STUDENT_NAME
ORDER BY STUDENT_NAME;

-- 11. 
SELECT DEPARTMENT_NAME, STUDENT_NAME, PROFESSOR_NAME
FROM TB_CLASS_PROFESSOR
JOIN TB_PROFESSOR USING (PROFESSOR_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
JOIN TB_STUDENT USING (DEPARTMENT_NO)
WHERE STUDENT_NO = 'A313047';

SELECT DEPARTMENT_NAME, STUDENT_NAME, PROFESSOR_NAME
FROM TB_DEPARTMENT
JOIN TB_STUDENT USING (DEPARTMENT_NO)
JOIN TB_PROFESSOR ON COACH_PROFESSOR_NO = PROFESSOR_NO
WHERE STUDENT_NO = 'A313047';


-- TB_CLASS / DEPARTMENT_NO, STUDENT / DEPARTMENT_NO, 
-- TB_CLASS_PROFESSOR TB_PROFESSOR PROFESSOR_NO

-- 12. TB_GRADE / TERM_NO CLASS_NO STUDENT_NO
--     TB_STUDENT / STUDENT_NO, STUDENT_NAME
SELECT STUDENT_NAME, TERM_NO
FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
JOIN TB_CLASS USING(CLASS_NO)
WHERE CLASS_NAME = '인간관계론' AND TERM_NO LIKE '2007%';

-- 13. 도대체 어떻게 하라는거야??? 미치겠네
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
LEFT JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
LEFT JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
WHERE CATEGORY = '예체능' AND PROFESSOR_NO IS NULL;

SELECT *
FROM TB_DEPARTMENT;

SELECT *
FROM TB_CLASS;

SELECT *
FROM TB_CLASS_PROFESSOR;

SELECT *
FROM TB_PROFESSOR;

SELECT *
FROM TB_STUDENT;

SELECT *
FROM TB_GRADE;

-- 14. COACH_PROFESSOR_NO로 찾아야함
SELECT STUDENT_NAME AS "학생이름", NVL(PROFESSOR_NAME,'지도교수 미지정') AS "지도교수"
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
LEFT JOIN TB_PROFESSOR ON COACH_PROFESSOR_NO = PROFESSOR_NO
WHERE DEPARTMENT_NAME = '서반아어학과';

-- 15. ABSENCE_YN
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, DEPARTMENT_NAME "학과 이름", AVG(POINT) AS "평점"
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(STUDENT_NO)
WHERE ABSENCE_YN = 'N'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING AVG(POINT) >= 4.0;

-- 16.
SELECT CLASS_NO, CLASS_NAME, AVG(POINT)
FROM TB_CLASS
JOIN TB_GRADE USING(CLASS_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '환경조경학과' AND CLASS_TYPE LIKE '%전공%'
GROUP BY CLASS_NO, CLASS_NAME;

-- 17.
SELECT T.STUDENT_NAME, T.STUDENT_ADDRESS
FROM TB_STUDENT T, TB_STUDENT S
WHERE T.DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                         FROM TB_STUDENT
                         WHERE STUDENT_NAME = '최경희')
GROUP BY T.STUDENT_NAME, T.STUDENT_ADDRESS;


-- 18.
SELECT STUDENT_NO, STUDENT_NAME
FROM (SELECT STUDENT_NO, STUDENT_NAME, RANK() OVER(ORDER BY AVG(POINT) DESC) AS "순위"
FROM TB_GRADE
JOIN TB_STUDENT USING(STUDENT_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '국어국문학과'
GROUP BY STUDENT_NO, STUDENT_NAME)
WHERE 순위<=1;

-- 19.
SELECT DEPARTMENT_NAME, ROUND(AVG(POINT),1) --계열 학과명, 전공평점
FROM TB_DEPARTMENT
JOIN TB_STUDENT USING (DEPARTMENT_NO)
JOIN TB_GRADE USING (STUDENT_NO)
WHERE CATEGORY = (SELECT CATEGORY
                    FROM TB_DEPARTMENT
                    WHERE DEPARTMENT_NAME = '환경조경학과')
GROUP BY DEPARTMENT_NAME;

-- 자연과학
SELECT CATEGORY
FROM TB_DEPARTMENT
WHERE DEPARTMENT_NAME = '환경조경학과';

-- DDL

-- 1.
CREATE TABLE TB_CATEGORY(
        NAME VARCHAR2(10),
        USE_YN CHAR(1) DEFAULT 'Y'  
);

-- 2.
CREATE TABLE TB_CLASS_TYPE (
    NO VARCHAR2(5) PRIMARY KEY,
    NAME VARCHAR2(10)
);

SELECT * FROM TB_CATEGORY;
SELECT * FROM TB_CLASS_TYPE;

-- 3. - PRAMARY KEY : ALTER TABLE 테이블명 ADD PRIMARY KEY(컬럼명);
ALTER TABLE TB_CATEGORY ADD PRIMARY KEY(NAME);

-- 4. ALTER TABLE 테이블명 MODIFY 컬럼명 NOT NULL;
ALTER TABLE TB_CLASS_TYPE MODIFY NAME NOT NULL;

-- 5.  TB_CATAGORY, TB_CLASS_TYPE

/*
ALTER TABLE DEPT_COPY 
    MODIFY DEPT_TITLE VARCHAR2(40)
    MODIFY LOCATION_ID VARCHAR2(2)
    MODIFY LNAME DEFAULT '영국';
    */

ALTER TABLE TB_CLASS_TYPE 
    MODIFY NO VARCHAR2(10)
    MODIFY NAME VARCHAR2(20);

ALTER TABLE TB_CATEGORY 
    MODIFY NAME VARCHAR2(20);

-- 6.
-- 3-1) 컬럼명 변경 : RENAME COLUMN 기존컬럼명 TO 바꿀컬럼명
-- ALTER TABLE DEPT_COPY RENAME COLUMN DEPT_TITLE TO DEPT_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN TB_CLASS_TYPE_NO TO CLASS_TYPE_NO;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN TB_CLASS_TYPE_NAME TO CLASS_TYPE_NAME;

ALTER TABLE TB_CATEGORY RENAME COLUMN TB_CATEGORY_NAME TO CATEGORY_NAME;

-- 7. ALTER TABLE 테이블명 ADD PRIMARY KEY(컬럼명);
-- ALTER TABLE DEPT_COPY RENAME CONSTRAINT SYS_C007188 TO DCOPY_LID_NN;
ALTER TABLE TB_CATEGORY RENAME CONSTRAINT SYS_C007195 TO PK_CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME CONSTRAINT SYS_C007194 TO PK_CLASS_TYPE_NO;

-- 8.
INSERT INTO TB_CATEGORY VALUES ('공학','Y');
INSERT INTO TB_CATEGORY VALUES ('자연과학','Y');
INSERT INTO TB_CATEGORY VALUES ('의학','Y');
INSERT INTO TB_CATEGORY VALUES ('예체능','Y');
INSERT INTO TB_CATEGORY VALUES ('인문사회','Y');
COMMIT; 

-- 9. ADD FOREIGN KEY(컬럼명) REFERENCES 참조할테이블명[(컬럼명)]
ALTER TABLE TB_DEPARTMENT
    ADD FOREIGN KEY(CATEGORY) REFERENCES TB_CATEGORY(CATEGORY_NAME);
ALTER TABLE TB_DEPARTMENT RENAME CONSTRAINT SYS_C007202 TO FK_DEPARTMENT_CATEGORY;


SELECT * FROM TB_CATEGORY;
SELECT * FROM TB_CLASS_TYPE;



SELECT *
FROM TB_DEPARTMENT;

SELECT *
FROM TB_CLASS;

SELECT *
FROM TB_CLASS_PROFESSOR;

SELECT *
FROM TB_PROFESSOR;

SELECT *
FROM TB_STUDENT;

SELECT *
FROM TB_GRADE;

