-- 1. DEPT_CODE = DEPT_ID// EMP_NAME. JOB_CODE = JOB . JOB_CODE
SELECT EMP_NAME, EMP_NO, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
WHERE SUBSTR(EMP_NO,1,2)>=70 AND SUBSTR(EMP_NO,1,2)<=79
AND SUBSTR(EMP_NO,8,1) = 2
AND SUBSTR(EMP_NAME,1,1) = '전';

-- 2. EMPLOYEE/EMP_NAME, DEPARTMENT/DEPT_ID, DEPT_TITLE, JOB/JOB_CODE

SELECT EMP_ID, EMP_NAME, EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM TO_DATE(SUBSTR(EMP_NO,1,6))) ,DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
WHERE SUBSTR(EMP_NO,1,6) = (SELECT MAX(SUBSTR(EMP_NO,1,6))FROM EMPLOYEE);

-- 3.EMPLOYEE/ JOB_CODE, JOB / JOB_CODE
SELECT EMP_NAME, JOB_NAME
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
WHERE EMP_NAME LIKE '%형%';

-- 4. EMPLOYEE / DEPT_CODE, DEPARTMENT/DEPT_TITLE, JOB/JOB_NAME
SELECT EMP_NAME, JOB_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
WHERE DEPT_CODE = 'D5' OR  DEPT_CODE = 'D6';

-- 5.EMPLOYEE/BONUS , LOCATION/LOCAL_NAME, DEPARTMENT/LOCATION_ID
SELECT EMP_NAME, BONUS, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
JOIN LOCATION ON LOCAL_CODE = LOCATION_ID
WHERE BONUS IS NOT NULL;

-- 6.
SELECT EMP_NAME, JOB_NAME, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
JOIN LOCATION ON LOCAL_CODE = LOCATION_ID;

-- 7. LOCATION/LOCAL_CODE JOIN NATIONAL/NATIONAL_CODE
SELECT EMP_NAME, DEPT_TITLE, LOCAL_NAME, NATIONAL_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
JOIN LOCATION ON LOCAL_CODE = LOCATION_ID
JOIN NATIONAL USING(NATIONAL_CODE)
WHERE NATIONAL_NAME = '일본' OR NATIONAL_NAME = '한국';

-- 8.
SELECT E.EMP_NAME, E.DEPT_CODE, M.EMP_NAME
FROM EMPLOYEE E, EMPLOYEE M
WHERE E.DEPT_CODE = M.DEPT_CODE AND E.EMP_NAME<>M.EMP_NAME
ORDER BY E.EMP_NAME;

-- 9. NVL 어캐하라는거ㅡㅡ
SELECT EMP_NAME, JOB_NAME, SALARY
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
WHERE (JOB_CODE = 'J4' OR JOB_CODE = 'J7')
AND BONUS IS NULL;

-- 10.
SELECT *
FROM(SELECT EMP_ID, EMP_NAME, DEPT_TITLE, JOB_NAME, HIRE_DATE, RANK() OVER(ORDER BY (SALARY + SALARY * NVL(BONUS,0)) * 12 DESC) AS "순위"
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID)
WHERE "순위" <= 5;

-- 11-1.

SELECT DEPT_TITLE, SUM(SALARY)
FROM EMPLOYEE
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
GROUP BY DEPT_TITLE
HAVING SUM(SALARY) >= (SELECT SUM(SALARY) * 0.2
                       FROM EMPLOYEE)
ORDER BY SUM(SALARY) DESC;

-- 11-2.
SELECT *
FROM (SELECT DEPT_TITLE, SUM(SALARY)
      FROM EMPLOYEE
      JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
      GROUP BY DEPT_TITLE
      HAVING SUM(SALARY) >= (SELECT SUM(SALARY) * 0.2
                             FROM EMPLOYEE)
ORDER BY SUM(SALARY) DESC);




-- 12.
SELECT DEPT_TITLE, SUM(SALARY)
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
GROUP BY DEPT_TITLE;


SELECT *
FROM EMPLOYEE;

SELECT *
FROM DEPARTMENT;

SELECT *
FROM JOB;

SELECT *
FROM LOCATION;

SELECT *
FROM NATIONAL;

SELECT *
FROM SAL_GRADE;